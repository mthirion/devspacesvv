version: '3.3'
networks:
  internal:
services:
  mosquitto:
      user: "1883:1883"
      image: eclipse-mosquitto
      hostname: mosquitto
      container_name: mosquitto
      restart: unless-stopped
      ports:
        - "1883:1883"
        - "9001:9001"
      volumes:
        - ./podman-compose/broker/mosquitto/log:/mosquitto/log
        - ./podman-compose/broker/mosquitto/config:/mosquitto/config
        - ./podman-compose/broker/mosquitto/data:/mosquitto/data
      networks:
        - internal
  zookeeper:
    container_name: zookeeper
    image: quay.io/strimzi/kafka:latest-kafka-3.4.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - internal
      
  kafka:
    container_name: kafka
    image: quay.io/strimzi/kafka:latest-kafka-3.4.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override replica.fetch.max.bytes=3000000 --override message.max.bytes=3000000 --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 600000
    depends_on:
      - zookeeper
    networks:
      - internal
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      kafka:
        condition: service_started  
    networks:
      - internal
